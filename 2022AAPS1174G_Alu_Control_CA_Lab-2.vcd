$date
	Sat Aug 17 17:19:26 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! zero $end
$var wire 32 " aluOut [31:0] $end
$var wire 4 # ALUContrl [3:0] $end
$var reg 32 $ aluIn1 [31:0] $end
$var reg 32 % aluIn2 [31:0] $end
$var reg 2 & aluOp [1:0] $end
$var reg 6 ' func [5:0] $end
$scope module ctrl $end
$var wire 2 ( aluOp [1:0] $end
$var wire 6 ) func [5:0] $end
$var reg 4 * ALUContrl [3:0] $end
$upscope $end
$scope module uut $end
$var wire 4 + ALUContrl [3:0] $end
$var wire 32 , aluIn1 [31:0] $end
$var wire 32 - aluIn2 [31:0] $end
$var reg 32 . aluOut [31:0] $end
$var reg 1 ! zero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11110 .
b10100 -
b1010 ,
b10 +
b10 *
b0 )
b0 (
b0 '
b0 &
b10100 %
b1010 $
b10 #
b11110 "
0!
$end
#10
b1010 "
b1010 .
b110 #
b110 *
b110 +
b11110 $
b11110 ,
b1 &
b1 (
#20
b1000 "
b1000 .
b0 #
b0 *
b0 +
b1000 %
b1000 -
b1111 $
b1111 ,
b100 '
b100 )
b10 &
b10 (
#30
b1111 "
b1111 .
b1 #
b1 *
b1 +
b1010 %
b1010 -
b101 $
b101 ,
b101 '
b101 )
#40
b1 "
b1 .
b111 #
b111 *
b111 +
b1010 '
b1010 )
#50
1!
b0 "
b0 .
b1111 $
b1111 ,
#60
